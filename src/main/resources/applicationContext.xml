<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
    http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
    ">

	<context:annotation-config />
	<context:component-scan base-package="com.comverse.timesheet.web.controller" />
	<context:component-scan base-package="com.comverse.timesheet.web.dao" />
	<context:component-scan base-package="com.comverse.timesheet.web.dao.impl" />
	<context:component-scan base-package="com.comverse.timesheet.web.util" />
	<context:component-scan base-package="com.comverse.timesheet.web.bean" />
	<context:component-scan base-package="com.comverse.timesheet.web.business" />
	<context:component-scan base-package="com.comverse.timesheet.web.business.impl" />
	
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.comverse.timesheet.web.controller.SessionInjectionInterceptor">
				<property name="dataSource" ref="dataSource" ></property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<import resource="activiti.cfg.xml"/>

	<!-- access static resource -->
	<mvc:annotation-driven>
	<!-- ajax解决乱码 -->
     <mvc:message-converters register-defaults="true">
    <bean class="org.springframework.http.converter.StringHttpMessageConverter">
      <property name="supportedMediaTypes" value = "text/html;charset=UTF-8" />
    </bean>
   </mvc:message-converters>
     </mvc:annotation-driven>

	<mvc:resources mapping="/fonts/**" location="/views/fonts/" />
	<mvc:resources mapping="/themes/**" location="/views/themes/" />
	<mvc:resources mapping="/css/**" location="/views/css/" />
	<mvc:resources mapping="/js/**" location="/views/js/" />
	<mvc:resources mapping="/extjs5.0/**" location="/views/extjs5.0/" />
	<mvc:resources mapping="/images/**" location="/views/images/" />
	<mvc:resources mapping="/assets/**" location="/views/assets/" />
	


	<mvc:default-servlet-handler />



	<!-- file upload max file size:50M -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxUploadSize" value="1000000000000"></property>
		<property name="uploadTempDir" value="temp"></property>
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/views/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
        		<value>classpath:c3p0.properties</value>
        		<value>classpath:redis.properties</value>
        		<value>classpath:mongo.properties</value>
      		</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}" />
		<property name="checkoutTimeout" value="${c3p0.checkoutTimeout}" />
		<property name="initialPoolSize" value="${c3p0.minPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		<property name="maxIdleTimeExcessConnections" value="${c3p0.maxIdleTimeExcessConnections}" />
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}" />
	</bean>
	 <bean id="transactionManager" 
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
        <property name="dataSource" ref="dataSource" /> 
    </bean> 
    <tx:advice id="userTxAdvice" transaction-manager="transactionManager"> 
        <tx:attributes> 
            <tx:method name="*" propagation="REQUIRED" read-only="false" 
                rollback-for="java.lang.Exception"/> 
        </tx:attributes> 
    </tx:advice> 
    <aop:config> 
        <aop:pointcut id="pc" 
            expression="execution(* com.comverse.timesheet.web.business.*.*(..))" /> 

        <aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" /> 
    </aop:config> 

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
        <property name="configLocation" 
        value="classpath:/mybatis/mapper/SqlMapConfig.xml" /> 
        <property name="dataSource" ref="dataSource" /> 
    </bean> 
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
        <constructor-arg index="0" ref="sqlSessionFactory" /> 
    </bean> 
    
    <!-- redis 缓存 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="maxActive" value="${redis.maxActive}" />  
        <property name="maxWait" value="${redis.maxWait}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>  
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"  p:pool-config-ref="poolConfig"/>  
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean>         

	<!-- 配置mongoDB -->
	 <mongo:mongo id="mongo" replica-set="${mongo.hostport}">
        <!-- 一些连接属性的设置 -->
        <mongo:options
                connections-per-host="${mongo.connectionsPerHost}"
                threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
                connect-timeout="${mongo.connectTimeout}"
                max-wait-time="${mongo.maxWaitTime}"
                auto-connect-retry="${mongo.autoConnectRetry}"
                socket-keep-alive="${mongo.socketKeepAlive}"
                socket-timeout="${mongo.socketTimeout}"
                slave-ok="${mongo.slaveOk}"
                write-number="1"
                write-timeout="0"
                write-fsync="true"/>
    </mongo:mongo>
    <!-- mongo的工厂，通过它来取得mongo实例,dbname为mongodb的数据库名，没有的话会自动创建 -->
    <mongo:db-factory dbname="luckypandadas" mongo-ref="mongo" />

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongo" />
        <constructor-arg name="databaseName" value="luckypandadas" />
    </bean>
    <!-- 映射转换器，扫描back-package目录下的文件，根据注释，把它们作为mongodb的一个collection的映射 -->
    <mongo:mapping-converter base-package="com.comverse.timesheet.web.dao.impl" />

    <!-- mongodb bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->
    <mongo:repositories base-package="com.comverse.timesheet.web.dao" />
	

      	<import resource="activiti.cfg.xml"/>
    <!-- set your Lucene directory -->  
    <!-- in this case I am pulling the location from a properties file -->  
    <!-- also, using the SimpleFSLockFactory ,数据文件存放位置设置-->  
    <bean id="luceneDirectory" class="org.apache.lucene.store.SimpleFSDirectory" >     
        <constructor-arg>       
            <bean class="java.io.File">         
                <constructor-arg value="D:\\common\\hahaha" />       
            </bean>     
        </constructor-arg>     
    </bean>   
    <bean id="TestBusiness" class="com.comverse.timesheet.web.business.TestBusiness"> 
    </bean> 
    <bean id="bookBusiness" class="com.comverse.timesheet.web.business.impl.BookBusinessImpl"> 
    </bean> 
     <bean id="ruleImpl" class="com.comverse.timesheet.web.business.impl.RuleImpl"> 
    </bean> 
    <bean id="luceneDemoBusiness" class="com.comverse.timesheet.web.business.impl.LuceneDemoBusinessImpl"> 
    </bean> 
</beans>
